// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// DoorsColumns holds the columns for the "doors" table.
	DoorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "direction", Type: field.TypeEnum, Enums: []string{"north", "south", "east", "west", "up", "down"}},
		{Name: "door_from", Type: field.TypeString, Nullable: true},
		{Name: "door_to", Type: field.TypeString, Nullable: true},
	}
	// DoorsTable holds the schema information for the "doors" table.
	DoorsTable = &schema.Table{
		Name:       "doors",
		Columns:    DoorsColumns,
		PrimaryKey: []*schema.Column{DoorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "doors_rooms_from",
				Columns:    []*schema.Column{DoorsColumns[4]},
				RefColumns: []*schema.Column{RoomsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "doors_rooms_to",
				Columns:    []*schema.Column{DoorsColumns[5]},
				RefColumns: []*schema.Column{RoomsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EntitiesColumns holds the columns for the "entities" table.
	EntitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// EntitiesTable holds the schema information for the "entities" table.
	EntitiesTable = &schema.Table{
		Name:       "entities",
		Columns:    EntitiesColumns,
		PrimaryKey: []*schema.Column{EntitiesColumns[0]},
	}
	// RoomsColumns holds the columns for the "rooms" table.
	RoomsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// RoomsTable holds the schema information for the "rooms" table.
	RoomsTable = &schema.Table{
		Name:       "rooms",
		Columns:    RoomsColumns,
		PrimaryKey: []*schema.Column{RoomsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DoorsTable,
		EntitiesTable,
		RoomsTable,
	}
)

func init() {
	DoorsTable.ForeignKeys[0].RefTable = RoomsTable
	DoorsTable.ForeignKeys[1].RefTable = RoomsTable
}
